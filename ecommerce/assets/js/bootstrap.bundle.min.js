// 简化版Bootstrap JS
document.addEventListener('DOMContentLoaded', function() {
  // 处理下拉菜单
  const dropdownToggleList = document.querySelectorAll('[data-bs-toggle="dropdown"]');
  dropdownToggleList.forEach(function(dropdownToggle) {
    dropdownToggle.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      const dropdown = this.nextElementSibling;
      if (dropdown.classList.contains('show')) {
        dropdown.classList.remove('show');
      } else {
        // 关闭其他打开的下拉菜单
        const openDropdowns = document.querySelectorAll('.dropdown-menu.show');
        openDropdowns.forEach(function(openDropdown) {
          openDropdown.classList.remove('show');
        });
        dropdown.classList.add('show');
      }
    });
  });

  // 点击页面其他地方关闭下拉菜单
  document.addEventListener('click', function() {
    const openDropdowns = document.querySelectorAll('.dropdown-menu.show');
    openDropdowns.forEach(function(openDropdown) {
      openDropdown.classList.remove('show');
    });
  });

  // 处理折叠元素
  const collapseToggleList = document.querySelectorAll('[data-bs-toggle="collapse"]');
  collapseToggleList.forEach(function(collapseToggle) {
    collapseToggle.addEventListener('click', function(e) {
      e.preventDefault();
      const targetId = this.getAttribute('data-bs-target');
      const target = document.querySelector(targetId);
      if (target) {
        if (target.classList.contains('show')) {
          target.classList.remove('show');
          // 更新图标
          const moreIcon = this.querySelector('.more-icon');
          const lessIcon = this.querySelector('.less-icon');
          const moreText = this.querySelector('.more-text');
          const lessText = this.querySelector('.less-text');
          if (moreIcon && lessIcon) {
            moreIcon.classList.remove('d-none');
            lessIcon.classList.add('d-none');
          }
          if (moreText && lessText) {
            moreText.classList.remove('d-none');
            lessText.classList.add('d-none');
          }
        } else {
          target.classList.add('show');
          // 更新图标
          const moreIcon = this.querySelector('.more-icon');
          const lessIcon = this.querySelector('.less-icon');
          const moreText = this.querySelector('.more-text');
          const lessText = this.querySelector('.less-text');
          if (moreIcon && lessIcon) {
            moreIcon.classList.add('d-none');
            lessIcon.classList.remove('d-none');
          }
          if (moreText && lessText) {
            moreText.classList.add('d-none');
            lessText.classList.remove('d-none');
          }
        }
      }
    });
  });

  // 处理标签页
  const tabList = document.querySelectorAll('[data-bs-toggle="tab"]');
  tabList.forEach(function(tab) {
    tab.addEventListener('click', function(e) {
      e.preventDefault();
      // 移除所有标签页的active类
      const tabLinks = document.querySelectorAll('[data-bs-toggle="tab"]');
      tabLinks.forEach(function(tabLink) {
        tabLink.classList.remove('active');
        tabLink.setAttribute('aria-selected', 'false');
      });
      // 添加当前标签页的active类
      this.classList.add('active');
      this.setAttribute('aria-selected', 'true');
      
      // 隐藏所有标签内容
      const targetId = this.getAttribute('data-bs-target');
      const tabPanes = document.querySelectorAll('.tab-pane');
      tabPanes.forEach(function(tabPane) {
        tabPane.classList.remove('show', 'active');
      });
      
      // 显示当前标签内容
      const target = document.querySelector(targetId);
      if (target) {
        target.classList.add('show', 'active');
      }
    });
  });

  // 处理轮播图
  const carouselList = document.querySelectorAll('.carousel');
  carouselList.forEach(function(carousel) {
    const items = carousel.querySelectorAll('.carousel-item');
    const indicators = carousel.querySelectorAll('.carousel-indicators button');
    const prevButton = carousel.querySelector('.carousel-control-prev');
    const nextButton = carousel.querySelector('.carousel-control-next');
    let currentIndex = 0;
    
    // 设置自动轮播
    const interval = carousel.getAttribute('data-bs-interval') || 5000;
    let autoplayInterval;
    
    function startAutoplay() {
      autoplayInterval = setInterval(function() {
        goToSlide((currentIndex + 1) % items.length);
      }, interval);
    }
    
    function stopAutoplay() {
      clearInterval(autoplayInterval);
    }
    
    function goToSlide(index) {
      // 隐藏当前幻灯片
      items[currentIndex].classList.remove('active');
      if (indicators && indicators[currentIndex]) {
        indicators[currentIndex].classList.remove('active');
        indicators[currentIndex].setAttribute('aria-current', 'false');
      }
      
      // 显示新幻灯片
      currentIndex = index;
      items[currentIndex].classList.add('active');
      if (indicators && indicators[currentIndex]) {
        indicators[currentIndex].classList.add('active');
        indicators[currentIndex].setAttribute('aria-current', 'true');
      }
    }
    
    // 绑定指示器点击事件
    if (indicators) {
      indicators.forEach(function(indicator, index) {
        indicator.addEventListener('click', function() {
          stopAutoplay();
          goToSlide(index);
          startAutoplay();
        });
      });
    }
    
    // 绑定上一张/下一张按钮事件
    if (prevButton) {
      prevButton.addEventListener('click', function() {
        stopAutoplay();
        goToSlide((currentIndex - 1 + items.length) % items.length);
        startAutoplay();
      });
    }
    
    if (nextButton) {
      nextButton.addEventListener('click', function() {
        stopAutoplay();
        goToSlide((currentIndex + 1) % items.length);
        startAutoplay();
      });
    }
    
    // 鼠标悬停时暂停自动轮播
    carousel.addEventListener('mouseenter', stopAutoplay);
    carousel.addEventListener('mouseleave', startAutoplay);
    
    // 开始自动轮播
    if (carousel.getAttribute('data-bs-ride') === 'carousel') {
      startAutoplay();
    }
  });

  // 处理模态框
  const modalTriggerList = document.querySelectorAll('[data-bs-toggle="modal"]');
  modalTriggerList.forEach(function(modalTrigger) {
    modalTrigger.addEventListener('click', function() {
      const targetId = this.getAttribute('data-bs-target');
      const modal = document.querySelector(targetId);
      if (modal) {
        modal.classList.add('show');
        modal.style.display = 'block';
        document.body.classList.add('modal-open');
        
        // 创建背景遮罩
        const backdrop = document.createElement('div');
        backdrop.className = 'modal-backdrop fade show';
        document.body.appendChild(backdrop);
        
        // 绑定关闭按钮事件
        const closeButtons = modal.querySelectorAll('[data-bs-dismiss="modal"]');
        closeButtons.forEach(function(closeButton) {
          closeButton.addEventListener('click', function() {
            modal.classList.remove('show');
            modal.style.display = 'none';
            document.body.classList.remove('modal-open');
            document.body.removeChild(backdrop);
          });
        });
        
        // 点击背景关闭模态框
        backdrop.addEventListener('click', function() {
          modal.classList.remove('show');
          modal.style.display = 'none';
          document.body.classList.remove('modal-open');
          document.body.removeChild(backdrop);
        });
      }
    });
  });
});