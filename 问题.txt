“Invalid value type for attribute 'factoryBeanObjectType': java.lang.String”


用启动开始...

========== Spring配置检查 ==========

04:21:10.241 [main] INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate -- Bootstrapping Spring Data JPA repositories in DEFAULT mode.

04:21:10.286 [main] INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate -- Finished Spring Data repository scanning in 32 ms. Found 0 JPA repository interfaces.

04:21:10.482 [main] WARN org.springframework.context.annotation.AnnotationConfigApplicationContext -- Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String

Spring上下文刷新失败                                                              22025-05-17T04:21:12.405+08:00  WARN 20012 --- [duocai-mall] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String

2025-05-17T04:21:13.148+08:00  INFO 20012 --- [duocai-mall] [main] .s.b.a.l.ConditionEvaluationReportLogger :

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.

2025-05-17T04:21:13.239+08:00 ERROR 20012 --- [duocai-mall] [main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String

at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86) ~[spring-beans-6.1.1.jar:6.1.1]

at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:838) ~[spring-beans-6.1.1.jar:6.1.1]

完成如下功能                                                                                         1. 创建WebMvcConfig配置类
1. 注册认证拦截器
配置跨域请求处理
设置资源映射
2. 实现Redis配置类

配置RedisTemplate
设置序列化器
配置连接池参数
3. 创建请求和响应VO类

完善LoginRequest和RegisterRequest类
实现LoginResponse类
4. 添加全局异常处理器

统一处理认证异常
返回标准化的错误响应
5. 实现用户服务

创建UserService接口和实现类
提供用户信息管理功能
6. 添加数据库初始化脚本

创建用户表结构
添加初始测试数据
7. 编写单元测试

测试认证服务的各项功能
验证JWT工具类的正确性       
8 完善 Controller类                                                                      8 controller类完善